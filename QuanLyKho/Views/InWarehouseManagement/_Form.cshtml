@{
    Layout = null;
}
@using QuanLyCTDT.Commons
@using QuanLyCTDT.Extentions
@model DTO.Warehouse.InWarehouseDTO
<div class="row form-horizontal form-label-left" style="margin-bottom:15px;">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <fieldset style="width: 100%">
                    <legend>
                        THÔNG TIN CHUNG
                    </legend>
                    <div class="first-step-group-criteria" style="padding-top:10px; margin-bottom: 10px;">
                        <div class="form-row">
                            <div class="col-md-12 mb-3">
                                <div class="form-row">
                                    <div class="col-md-6 mb-3">
                                        <label>Ngày tạo</label>
                                        @Html.HiddenFor(model => model.Id)
                                        <div class='input-group date datetimepicker3' data-date-format="dd/mm/yyyy">
                                            @Html.TextBoxFor(model => model.CreateAt, new { @class = "form-control input-group-addon", placeholder = "Ngày tạo" })
                                            <div class="input-group-append input-group-addon">
                                                <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                                            </div>
                                        </div>
                                        @Html.ValidationMessageFor(model => model.CreateAt, null, new { @class = "label label-danger" })
                                    </div>
                                    <div class="col-md-6 mb-3">
                                        <label>Số hóa đơn</label>
                                        @Html.TextBoxFor(model => model.Number, new { @class = "form-control", placeholder = "Số hóa đơn", @autocomplete = "off", @type="number" })
                                        @Html.ValidationMessageFor(model => model.Number, null, new { @class = "label label-danger" })
                                    </div>
                                </div>
                                <div class="form-row">
                                    <div class="col-md-6 mb-3">
                                        <label>Nhà cung cấp</label>
                                        @Html.DropDownListFor(model => model.VenderId,
                                                        new SelectList(Model.Vendors, "Id", "FullName", Model.VenderId), null,
                                                        new
                                                        {
                                                            @class = "form-control cc-select2-gender custom-select",
                                                            @style = "width:100%;",
                                                            @id = "VenderId"
                                                        })
                                        @Html.ValidationMessageFor(model => model.VenderId, null, new { @class = "label label-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </fieldset>
                <fieldset style="width: 100%">
                    <legend>
                        THÔNG TIN CHUNG CHI TIẾT
                    </legend>
                    <div class="first-step-group-criteria" style="padding-top:10px; margin-bottom: 10px;">
                        <div class="form-row">
                            <div class="col-md-12 mb-3 clssItemStock">
                                @if (Model.InWarehousDetails != null && Model.InWarehousDetails.Any())
                                {
                                    int ofset = 0;
                                    foreach (var item in Model.InWarehousDetails)
                                    {
                                        item.Offset = ofset;
                                        @Html.Partial("_ItemStock", item)
                                        ofset = ofset + 1;
                                    }
                                }
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="col-md-10 mb-3"></div>
                            <div class="col-md-2 mb-3">
                                <a class="form-control btn-success" onclick="addStock('@Model.Id')" style="">Thêm vật tư</a>
                            </div>
                        </div>
                    </div>
                </fieldset>
                <div class="text-right">
                    <a href="@Url.Action("Index","InWarehouseManagement")" class="btn btn-outline-secondary">Hủy</a>
                    @if (Model.Status == (int)EnumCommon.EWarehouseStatus.Inprocessing)
                    {
                        <button class="btn btn-outline-primary" type="submit">Lưu</button>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        $("#VenderId").select2({
            placeholder: "Chọn nhà cung cấp",
            allowClear: true
        });
    })

    function addStock(inWarehouseId) {
        var _OffSet = $('.step').length;
        $.ajax({
            type: "get",
            url: '@Url.Action("AddStock", "InWarehouseManagement")',
            contentType: "application/json; charset=utf-8",
            data: { offSet: _OffSet },
            dataType: "html",
            success: function (data) {
                $('.clssItemStock').append(data);
            },
            error: function() { alert('error'); }
        });
    }
</script>